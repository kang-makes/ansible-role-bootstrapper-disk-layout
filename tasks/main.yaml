---

# I cannot do a declarative way to prepare disks like this:
#
# - name: Creating a partition table
#   parted:
#     state: present
#   vars: "{{ disk_step }}"
#
# This test is commented on ansible's repository and it is still not a supported way.
# https://github.com/ansible/ansible/blob/devel/test/integration/targets/include_import/role/test_include_role.yml#L96

- name: Building disk layout
  include_tasks: "disk_creator.yaml"
  loop: "{{ ansible_local.disk_layout }}"

# TODO: This shit does not work
# - name: Fail if bootstrapped and changes have been made
#   assert:
#     that: "disk_layout_changed == false"
#     fail_msg: "This role run in check mode and expected no changes"
#     success_msg: "Facts' layout matches host's layout"
#   when: ansible_local.bootstrapped | default(false) and not ansible_check_mode

# This works, but need for changes in the facts JSON.
# - name: run result
#   action: "{{item.step}}"
#   args: "{{item.args}}"
#   loop: "{{ ansible_local.disk_layout }}"
#   when: item.step in ("parted", "crypt", "format", "zpool", "zfs")
